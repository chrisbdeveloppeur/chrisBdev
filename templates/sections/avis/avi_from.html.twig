<div class="container is-flex" style="justify-content: center">
    <div class="column is-flex box is-half has-text-centered" style="background: rgba(10,10,10,0.9);box-shadow: rgb(0, 0, 0) 0 0 15px;position: relative">
        <article class="column has-text-centered">

                {% if form_errors(avi_form) != null %}
                    <article class="message is-small is-danger">
                        <div class="message-header">
                            <p>Oops !</p>
                            <span class="icon is-small has-text-white">
                                <i class="fas fa-lg fa-exclamation-triangle"></i>
                            </span>
                        </div>
                        <div class="message-body has-text-left">
                            {{ form_errors(avi_form) }}
                        </div>
                    </article>
                {% endif %}

            <div class="field">
                <label class="label has-text-white">Pseudo / Nom - Pr√©nom / Email *</label>
                <div class="control">
                    {% if is_granted("ROLE_USER") %}
                        {% if app.user.pseudo %}
                            {{ app.user.pseudo }}
                        {% elseif app.user.name and app.user.lastname %}
                            {{ app.user.name }} {{ app.user.lastname }}
                        {% else %}
                            {{ app.user.email }}
                        {% endif %}
                        {{ form_widget(avi_form.user, {'attr': {'class': 'input is-primary has-text-centered is-hidden'}}) }}
                    {% else %}
                        {{ form_widget(avi_form.user, {'attr': {'class': 'input is-primary has-text-centered'}}) }}
                    {% endif %}
                </div>
            </div>

            <div class="field">
                <label class="label has-text-white">Note *</label>
                <div class="control is-flex is-justify-content-space-evenly">
                    {% for child in avi_form.note %}
                        <div class="column note-star" onmouseover="fillStarOnOver(this)" onmouseleave="emptyStarOnLeave(this)" onclick="checkRadio(this)">
                            <div class="column">
                                <span class="icon is-size-4 has-text-white">
                                    <i class="far fa-star fa-2x"></i>
                                </span>
                            </div>
                            <div class="column">
                                {{ form_widget(child, {'attr': {'class': 'radio-select is-hidden'} } ) }}
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>

            <div class="field">
                <label class="label has-text-white">Commentaire</label>
                <div class="control has-icons-left">
                    {{ form_widget(avi_form.commentaire, {'attr': {'class': 'textarea is-primary', 'placeholder' : 'Taper mon commentaire'}}) }}
                </div>
            </div>

            <button type="submit" class="button is-green-custom is-small">
                    <span class="icon">
                        <i class="fas fa-paper-plane"></i>
                    </span>
                    <span>
                        Soumettre
                    </span>
            </button>

        </article>
    </div>
</div>


<script>

    function fillStarOnOver(star) {
        star.classList.add('note-hover');
        let allStarsArr = document.getElementsByClassName('note-star');
        for (i=0; i<allStarsArr.length; i++){
            let iconStar = allStarsArr[i].firstElementChild.firstElementChild.firstElementChild;
            iconStar.classList.replace('far', 'fas');
            iconStar.classList.add('is-text-green-custom');
            iconStar.classList.add('has-text-green-neon-secondary');
            if (allStarsArr[i].classList.contains('note-hover')){
                break
            }
        }
    }

    function emptyStarOnLeave(star){
        star.classList.remove('note-hover');
        let allStarsArr = document.getElementsByClassName('note-star');
        let arrLenght = allStarsArr.length;
        for (i=arrLenght-1; i>=0; i--){
            let iconStar = allStarsArr[i].firstElementChild.firstElementChild.firstElementChild;
            let radioSelect = allStarsArr[i].querySelector('.radio-select');
            if (radioSelect.checked === true){
                break
            }else {
                iconStar.classList.replace('fas', 'far');
                iconStar.classList.remove('is-text-green-custom');
                iconStar.classList.remove('has-text-green-neon-secondary');
            }
        }
    }


    function checkRadio(star){
        let allStarsArr = document.getElementsByClassName('note-star');
        let thisRadio = star.querySelector('.radio-select');
        for (i=0; i<allStarsArr.length; i++){
            let allRadio = allStarsArr[i].getElementsByClassName('radio-select');
            allRadio[0].checked = false;
        }
        thisRadio.checked = true;
        emptyStarOnLeave(star);
    }
</script>
